#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    Oct 20, 2019 07:41:04 PM PKT  platform: Windows NT

import sys
import cv2
import tkinter.messagebox as messagebox
from tkinter import filedialog
from PIL import ImageTk, Image
import os
import matplotlib.pyplot as plt
from sklearn.neighbors import KNeighborsClassifier

import frui

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import t1_support
global img
img=cv2.imread("5.jpg")
def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root,img
    root = tk.Tk()
    top = Toplevel1 (root)
    t1_support.init(root, top)
    
    root.mainloop()
#global img
w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    t1_support.init(w, top, *args, **kwargs)
    
    return (w, top)
result=[]
def destroy_Toplevel1():
    global w
    w.destroy()
    w = None
def fileDialog(self):
 
        self.filename = filedialog.askopenfilename(initialdir =  "/", title = "Select A File", filetype =
        (("jpeg files","*.jpg"),("all files","*.*")) )
        self.label = ttk.Label(self.labelFrame, text = "")
        self.label.grid(column = 1, row = 2)
        self.label.configure(text = self.filename)
class Toplevel1:
    def impbtf(self):
        self.filename = filedialog.askopenfilename(initialdir =  "/", title = "Select A File", filetype =
        (("jpeg files","*.jpg"),("all files","*.*")) )
        img = ImageTk.PhotoImage(Image.open(self.filename))
        panel = tk.Label(self.Labelframe1, image = img)
#        panel.configure(command=img)
        panel.image=img
        panel.pack(fill="both")
#        self.label = ttk.Label(self.Labelframe1, text = "")
#        self.label.grid(column = 1, row = 2)
#        self.label.configure(text = self.filename)
        
    def mtchbtf(self):
        j=self.jitters.get()
        t=self.tolerance.get()
        n=self.nofmtch.get()
        results=frui.matchsketch(img)
        imag = ImageTk.PhotoImage(Image.open(results[0]))
        
        panel = tk.Label(self.Labelframe2, image = imag)
        panel.configure(image=imag)
        panel.image=imag
        panel.pack(fill="both")
#        for r in results:
#            panel = tk.Label(self.Labelframe1, image = r)
#            panel.image=r
#            panel.pack(fill="both")
        messagebox.showinfo("Match","Values:\nJitters:"+j+"\nTolerance:"+t+"\nNo of Matches:"+n)
        
        
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1533x1132+650+150")
        top.title("Sketch Matcher")
        top.configure(background="#d9d9d9")

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=-0.013, rely=0.08, relwidth=1.018)

        self.TLabelframe1 = ttk.Labelframe(top)
        self.TLabelframe1.place(relx=0.013, rely=0.097, relheight=0.879
                , relwidth=0.965)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''Sketch Matching''')

        self.Labelframe1 = tk.LabelFrame(self.TLabelframe1)
        self.Labelframe1.place(relx=0.02, rely=0.05, relheight=0.638
                , relwidth=0.419, bordermode='ignore')
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Result''')
        self.Labelframe1.configure(background="#d9d9d9")

        self.Labelimg = tk.Label(self.Labelframe1)
        self.Labelimg.place(relx=0.081, rely=0.11, height=518, width=512
                , bordermode='ignore')
        self.Labelimg.configure(background="#d9d9d9")
        self.Labelimg.configure(disabledforeground="#a3a3a3")
        self.Labelimg.configure(foreground="#000000")
        self.Labelimg.configure(text='''Image''')
        self.Labelimg.imagenames=img
        
        

        self.Labelframe2 = tk.LabelFrame(self.TLabelframe1)
        self.Labelframe2.place(relx=0.473, rely=0.06, relheight=0.276
                , relwidth=0.5, bordermode='ignore')
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Variables''')
        self.Labelframe2.configure(background="#d9d9d9")

        self.jitters = tk.Entry(self.Labelframe2)
        self.jitters.place(relx=0.311, rely=0.218, height=44, relwidth=0.114
                , bordermode='ignore')
        self.jitters.configure(background="white")
        self.jitters.configure(disabledforeground="#a3a3a3")
        self.jitters.configure(font="TkFixedFont")
        self.jitters.configure(foreground="#000000")
        self.jitters.configure(insertbackground="black")

        self.tolerance = tk.Entry(self.Labelframe2)
        self.tolerance.place(relx=0.311, rely=0.509, height=44, relwidth=0.114
                , bordermode='ignore')
        self.tolerance.configure(background="white")
        self.tolerance.configure(disabledforeground="#a3a3a3")
        self.tolerance.configure(font="TkFixedFont")
        self.tolerance.configure(foreground="#000000")
        self.tolerance.configure(insertbackground="black")

        self.Label1 = tk.Label(self.Labelframe2)
        self.Label1.place(relx=0.014, rely=0.218, height=38, width=196
                , bordermode='ignore')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Sketch Sampling :''')

        self.Label2 = tk.Label(self.Labelframe2)
        self.Label2.place(relx=0.014, rely=0.509, height=38, width=196
                , bordermode='ignore')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Match Tolerance :''')

        self.nofmtch = tk.Entry(self.Labelframe2)
        self.nofmtch.place(relx=0.73, rely=0.218, height=44, relwidth=0.127
                , bordermode='ignore')
        self.nofmtch.configure(background="white")
        self.nofmtch.configure(disabledforeground="#a3a3a3")
        self.nofmtch.configure(font="TkFixedFont")
        self.nofmtch.configure(foreground="#000000")
        self.nofmtch.configure(insertbackground="black")

        self.Label3 = tk.Label(self.Labelframe2)
        self.Label3.place(relx=0.473, rely=0.218, height=38, width=176
                , bordermode='ignore')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''No of Matches :''')

        self.Labelframe3 = tk.LabelFrame(self.TLabelframe1)
        self.Labelframe3.place(relx=0.473, rely=0.362, relheight=0.327
                , relwidth=0.5, bordermode='ignore')
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Controls''')
        self.Labelframe3.configure(background="#d9d9d9")

        self.imortbtn = tk.Button(self.Labelframe3)
        self.imortbtn.place(relx=0.068, rely=0.185, height=54, width=169
                , bordermode='ignore')
        self.imortbtn.configure(activebackground="#ececec")
        self.imortbtn.configure(activeforeground="#000000")
        self.imortbtn.configure(background="#d9d9d9")
        self.imortbtn.configure(disabledforeground="#a3a3a3")
        self.imortbtn.configure(foreground="#000000")
        self.imortbtn.configure(highlightbackground="#d9d9d9")
        self.imortbtn.configure(highlightcolor="black")
        self.imortbtn.configure(pady="0")
        self.imortbtn.configure(text='''Import Sketch''')
        self.imortbtn.configure(command=self.impbtf)

        self.mtchbtn = tk.Button(self.Labelframe3)
        self.mtchbtn.place(relx=0.068, rely=0.523, height=54, width=172
                , bordermode='ignore')
        self.mtchbtn.configure(activebackground="#ececec")
        self.mtchbtn.configure(activeforeground="#000000")
        self.mtchbtn.configure(background="#d9d9d9")
        self.mtchbtn.configure(disabledforeground="#a3a3a3")
        self.mtchbtn.configure(foreground="#000000")
        self.mtchbtn.configure(highlightbackground="#d9d9d9")
        self.mtchbtn.configure(highlightcolor="black")
        self.mtchbtn.configure(pady="0")
        self.mtchbtn.configure(text='''Match''')
        self.mtchbtn.configure(command=self.mtchbtf)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.013, rely=0.009, height=58, width=612)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(justify='left')
        self.Label4.configure(relief="ridge")
        self.Label4.configure(text='''Sketch Matcher''')

if __name__ == '__main__':
    vp_start_gui()





